#!/bin/bash

DIR="$( cd "$( dirname "$0" )" && pwd )"
JAR=${DIR}/build/libs/subrosa-1.0.0-SNAPSHOT.jar

GRADLE_PROPERTIES=${DIR}/gradle.properties
GENERATED_ENV=${DIR}/script/vagrant/generated.env

KEY_PATH=${DIR}/keys/subrosa
NEXUS_KEY=nexus.subrosagames.com.crt

init_gradle() {
    echo -n "LDAP Username: "
    read ldapUser
    echo -n "LDAP Password: "
    read -s ldapPass
    echo

    cat << FILE > ${GRADLE_PROPERTIES}
nexusUsername=${ldapUser}
nexusPassword=${ldapPass}
FILE
}

init_vagrant_env() {
    echo -n "GitHub Username: "
    read ghUser
    echo -n "GitHub Password: "
    read -s ghPass
    echo

    cat << FILE > ${GENERATED_ENV}
export SEC_CONFIG_REPO_USER=${ghUser}
export SEC_CONFIG_REPO_PASS=${ghPass}
FILE
}

create() {
    echo -n "[a]pp, [l]ibrary, or [s]ervice? "
    read -n 1 type
    echo -n "Name: "
    read name

    case "$type" in
        a)
            dir="apps"
        ;;
        l)
            dir="libs"
        ;;
        s)
            dir="services"
        ;;
    esac
    mkdir -p "${dir}/${name}/src/{main,test},{java,resources}"
    echo "Need to make build.gradle"
    echo "Need to make Dockerfile"
    echo "Need to make src/main/resources/application.yml"
    echo "Need to make src/main/resources/bootstrap.yml"
}

install_nexus_key() {
    echo "Default keystore password is 'changeit'"
    sudo keytool -import --noprompt -trustcacerts \
                -alias "nexus.subrosagames.com" \
                -file ${KEY_PATH}/${NEXUS_KEY} \
                -keystore  ${JAVA_HOME}/jre/lib/security/cacerts
}

case "$1" in
    init)
        echo "Initializing environment..."
        [ ! -f ${GRADLE_PROPERTIES} ] && init_gradle
        [ ! -f ${GENERATED_ENV} ] && init_vagrant_env
        [ ! -f ${KEY_PATH}/${NEXUS_KEY} ] && echo "Need to put nexus certificate in ${KEY_PATH}" && exit 1
        install_nexus_key
        docker-compose up -d --no-recreate
    ;;
    deploy)
        echo "[RUNNING] ./gradlew $2:assemble"
        ./gradlew $2:assemble
        echo "[RUNNING] docker-compose stop $2"
        docker-compose stop $2
        echo "[RUNNING] docker-compose rm --force $2"
        docker-compose rm --force $2
        echo "[RUNNING] docker-compose build $2"
        docker-compose build $2
        echo "[RUNNING] docker-compose up -d --no-recreate $2"
        docker-compose up -d --no-recreate $2
        echo "[RUNNING] docker-compose logs $2"
        docker-compose logs $2
    ;;
    run)
        echo "[RUNNING] ./gradlew $2:run"
        ./gradlew $2:run
    ;;
    ssh)
        vagrant up
        vagrant ssh
    ;;
    create)
        create
    ;;
    *)
        vagrant up
        vagrant ssh -c "sudo /vagrant/script/env.sh $1"
    ;;
esac

