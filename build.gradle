task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

def onlyFor(task, config) {
    gradle.taskGraph.whenReady { graph ->
        if (graph.hasTask(task)) {
            project.configure(project, config)
        }
    }
}

subprojects {

    ext {
//        springPlatformVersion = '2.0.2.RELEASE'
        springPlatformVersion = '2.1.0.BUILD-SNAPSHOT'
//        springCloudVersion = 'Angel.SR6'
        springCloudVersion = 'Brixton.M5'

        jacksonVersion = '2.6.1'
        axonVersion = '2.4.3'

        vagrantIp = '10.10.10.42'
        ec2Host = 'ec2-54-69-114-113.us-west-2.compute.amazonaws.com'
        localhost = 'localhost'

        configDir = file("$rootDir/config")
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:unchecked'
        options.compilerArgs << '-Xlint:deprecation'
        options.encoding = "UTF-8"
    }

    tasks.withType(Test) {
        testLogging {
            events 'started', 'passed'
        }
    }

    repositories {
        mavenCentral()
        maven {
            url "http://nexus.subrosagames.com/content/groups/public"
            credentials {
                username nexusUsername
                password nexusPassword
            }
        }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/libs-snapshot' }
    }

    buildscript {
        repositories {
            mavenCentral()
            jcenter()
        }
        dependencies {
            classpath "org.flywaydb:flyway-gradle-plugin:3.0"
            classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE"
        }
    }

    apply from: new File(rootDir, 'gradle/quality.gradle')
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

