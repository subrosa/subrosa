apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'subrosa'
version = '1.0.0-SNAPSHOT'
description = """Subrosa API"""

jar {
    baseName = 'subrosa-api'
    version = project.version
}

task ec2 {
    description = 'Configures build for EC2 deployment'
    group = 'configuration'
}

task local {
    description = 'Configures build for localhost deployment'
    group = 'configuration'
}

configurations {
    provided
}

//Include provided for compilation
sourceSets.main.compileClasspath += configurations.provided

// Tests fail to find persistence.xml
sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir
compileJava.dependsOn(processResources)

dependencyManagement {
    imports {
        mavenBom "io.spring.platform:platform-bom:${springPlatformVersion}"
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
//        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudVersion}"
//        mavenBom "org.springframework.data:spring-data-releasetrain:${springDataVersion}"
    }

}

dependencies {
    compile project(':common')
    compile project(':security')
    testCompile project(':test')

    // spring boot
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-actuator"

    // spring cloud
    compile 'org.springframework.cloud:spring-cloud-config-client:1.0.4.RELEASE'
    compile "org.springframework.boot:spring-boot-starter-aop"
    compile 'org.springframework.retry:spring-retry'

    // session and security
    compile 'org.springframework.security:spring-security-web:4.0.3.RELEASE'
    compile 'org.springframework.security:spring-security-config:4.0.3.RELEASE'
    testCompile 'org.springframework.security:spring-security-test:4.0.3.RELEASE'
    compile(group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.0.9.BUILD-SNAPSHOT') {
        exclude(module: 'spring-security-core')
    }
    compile 'org.springframework.session:spring-session'
    compile 'org.springframework.session:spring-session-data-redis'
    compile "org.springframework.boot:spring-boot-starter-redis"
    testCompile "com.github.kstyrc:embedded-redis:0.6"

    // persistence
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    runtime 'com.mchange:c3p0'
    runtime 'org.postgresql:postgresql'

    // axon
    compile "org.axonframework:axon-core:${axonVersion}"
    testCompile "org.axonframework:axon-test:${axonVersion}"

    // validation
    compile 'org.hibernate:hibernate-validator'
    compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    runtime group: 'org.glassfish.web', name: 'el-impl', version: '2.2.1-b05'

    // messaging
//    compile group: 'javax', name: 'javaee-api', version: '7.0'

    // serialization
    compile 'com.fasterxml.jackson.core:jackson-core'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate4'

    // files
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.2.2'
    compile(group: 'net.sf.jmimemagic', name: 'jmimemagic', version: '0.1.3') {
        exclude(module: 'log4j')
        exclude(module: 'commons-logging')
    }
    compile 'fm.last:moji:1.4.0'

    // utils
    compile "org.projectlombok:lombok:1.16.2"
    compile "com.jayway.jsonpath:json-path:2.1.0"
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile(group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.2') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.joda', name: 'joda-money', version: '0.9.1'
    compile group: 'joda-time', name: 'joda-time', version: '2.4'
    compile group: 'com.vividsolutions.jts', name: 'jts', version: '1.8.0'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.5'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
    compile group: 'com.google.code.geocoder-java', name: 'geocoder-java', version: '0.16'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'

    // needed?
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.1.4'
    compile group: 'com.amazon.aws', name: 'aws-java-jdk', version: '1.4.1'
    compile group: 'com.google.android.gcm', name: 'gcm-server', version: '3'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'cglib', name: 'cglib', version: '3.1'

    // test
    testCompile(group: 'junit', name: 'junit', version: '4.11') {
        exclude(module: 'hamcrest-core')
    }
    testCompile(group: 'org.mockito', name: 'mockito-core', version: '1.9.0') {
        exclude(module: 'hamcrest-core')
    }
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "info.solidsoft.mockito:mockito-java8:0.3.0"
    testCompile "org.assertj:assertj-core:3.1.0"
    testCompile 'org.springframework:spring-test'
    testCompile "com.github.springtestdbunit:spring-test-dbunit:1.1.0"
    testCompile(group: 'org.dbunit', name: 'dbunit', version: '2.4.9') {
        exclude(module: 'junit')
    }
    testRuntime "org.hsqldb:hsqldb:2.3.2"

    provided 'net.sourceforge.findbugs:annotations:1.3.2'
}

apply from: 'migrations.gradle'
