apply plugin: 'jacoco'
apply plugin: 'build-dashboard'

//def configDir = new File(buildscript.sourceFile.parentFile.parentFile, 'config')

apply plugin: 'checkstyle'
ext {
    checkstyleConfigDir = "$configDir/checkstyle"
}
checkstyle {
    toolVersion = '6.3'
    configFile = file("$checkstyleConfigDir/checkstyle.xml")
    configProperties.checkstyleConfigDir = checkstyleConfigDir
    ignoreFailures = true
}
tasks.withType(Checkstyle) { Task task ->
    task.doLast {
        def xmlReport = task.reports.xml.destination
        def basename = xmlReport.name.lastIndexOf('.').with { xmlReport.name[0..it-1] }
        def htmlReport = new File(xmlReport.parent, "${basename}.html")
        println "Generating HTML report for $task.name"
        println "   at $htmlReport"
        println "   from $xmlReport"
        ant.xslt(in: xmlReport,
                style: file("$checkstyleConfigDir/checkstyle-noframes-sorted.xsl"),
                out: htmlReport)
    }
}

apply plugin: 'findbugs'
findbugs {
    ignoreFailures = true
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

apply plugin: 'pmd'
pmd {
    ignoreFailures = true
}
tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

apply plugin: 'sonar-runner'
def sonarServerUrl = "10.10.10.42"
sonarRunner {
    sonarProperties {
        property "sonar.host.url", "http://$sonarServerUrl:9000"
        property "sonar.jdbc.url", "jdbc:mysql://$sonarServerUrl/sonar"
        property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.jdbc.username", "sonar"
        property "sonar.jdbc.password", "123qwe"
        property "sonar.jacoco.reportPath", "$buildDir/jacoco/jacocoTest.exec"
    }
}

